<?php

/**
 * BaseManifestationEntry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $manifestation_id
 * @property integer $entry_id
 * @property Manifestation $Manifestation
 * @property Entry $Entry
 * @property Doctrine_Collection $Entries
 * 
 * @method integer             getManifestationId()  Returns the current record's "manifestation_id" value
 * @method integer             getEntryId()          Returns the current record's "entry_id" value
 * @method Manifestation       getManifestation()    Returns the current record's "Manifestation" value
 * @method Entry               getEntry()            Returns the current record's "Entry" value
 * @method Doctrine_Collection getEntries()          Returns the current record's "Entries" collection
 * @method ManifestationEntry  setManifestationId()  Sets the current record's "manifestation_id" value
 * @method ManifestationEntry  setEntryId()          Sets the current record's "entry_id" value
 * @method ManifestationEntry  setManifestation()    Sets the current record's "Manifestation" value
 * @method ManifestationEntry  setEntry()            Sets the current record's "Entry" value
 * @method ManifestationEntry  setEntries()          Sets the current record's "Entries" collection
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseManifestationEntry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('manifestation_entry');
        $this->hasColumn('manifestation_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('entry_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('manif_entry_index', array(
             'fields' => 
             array(
              0 => 'manifestation_id',
              1 => 'entry_id',
             ),
             'unique' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Manifestation', array(
             'local' => 'manifestation_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Entry', array(
             'local' => 'entry_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('EntryElement as Entries', array(
             'local' => 'id',
             'foreign' => 'manifestation_entry_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}