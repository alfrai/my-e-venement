<?php

/**
 * SurveyQuery
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class SurveyQuery extends PluginSurveyQuery
{
  protected $_widgets_with_options = array(
    'sfWidgetFormChoice',
  );
  
  public function getWidget()
  {
    $class = $this->type;
    if ( is_array($choices = $this->getChoices()) )
    {
      $widget = new $class(array( 'choices' => $choices, ));
    }
    else
    {
      $widget = new $class;
    }
    $widget->setLabel($this->name);
    
    if ( is_array($choices = $this->getChoices()) )
      $widget->setOption('choices', $choices);
    
    return $widget;
  }
  
  /**
    * function getChoices()
    * @return FALSE if no choice exists for this widget
    * @return array containing the choices as returned for instance by sfWidgetFormChoice::getOption('choices')
    **/
  protected function getChoices()
  {
    //$widget = new $this->type;
    
    // check if options are expected
    $with_options = false;
    foreach ( $this->_widgets_with_options as $class )
    if ( is_a($this->type, $class, true) )
    {
      $with_options = true;
      break;
    }
    
    // no option expected
    if ( !$with_options )
      return false;
    
    // build up the choices array
    $choices = array();
    foreach ( $this->Options as $option )
    if ( !$option->isNew() )
      $choices[$option->value] = $option->name;
    
    return $choices;
  }
}
