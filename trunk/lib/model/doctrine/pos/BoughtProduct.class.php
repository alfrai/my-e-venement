<?php
/**********************************************************************************
*
*	    This file is part of e-venement.
*
*    e-venement is free software; you can redistribute it and/or modify
*    it under the terms of the GNU General Public License as published by
*    the Free Software Foundation; either version 2 of the License.
*
*    e-venement is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*    GNU General Public License for more details.
*
*    You should have received a copy of the GNU General Public License
*    along with e-venement; if not, write to the Free Software
*    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*
*    Copyright (c) 2006-2014 Baptiste SIMON <baptiste.simon AT e-glop.net>
*    Copyright (c) 2006-2014 Libre Informatique [http://www.libre-informatique.fr/]
*
***********************************************************************************/
?>
<?php

/**
 * BoughtProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BoughtProduct extends PluginBoughtProduct
{
  public function getBarcode($type = 'normal')
  {
    if ( $this->rawGet('barcode') )
      return $this->rawGet('barcode');
    
    if ( !$this->description_for_buyers || $type == 'normal' )
    {
      $this->barcode = $type != 'id' ? json_encode(array('code' => $this->code, 'id' => $this->id)) : $this->getIdBarcoded();
      return $this->rawGet('barcode');
    }
    
    $matches = array();
    preg_match('!<a\s+[^>]*href\s*=\s*"([^\"]*)"[^>]*>.*</a>!iUs', $this->description_for_buyers, $matches);
    if ( count($matches) == 0 )
      return $this->rawGet('barcode');
    $this->barcode = $matches[1];
    
    return $this->rawGet('barcode');
  }
  
  public function renderBarcode($file = NULL) // PNG output directly to stdout
  {
    $bc = new liBarcode($this->barcode);
    $bc->render($file);
    return $this;
  }
  
  public function getBarcodePng($id = false)
  {
    $bc = new liBarcode($this->getBarcode($id ? 'id' : NULL));
    return (string)$bc;
  }
  
  public function getIdBarcoded()
  {
    $c = ''.$this->id;
    $n = strlen($c);
    for ( $i = 12-$n ; $i > 0 ; $i-- )
      $c = '0'.$c;
    return $c;
  }
  
  public function renderSimplified($type = 'png', $qrcode_only_id = false, $debug = false)
  {
    sfApplicationConfiguration::getActive()->loadHelpers(array('Url', 'Number'));
    
    $img = '<img
      src="data:image/png;base64,'.base64_encode($this->getBarcodePng($qrcode_only_id)).'"
      title="'.$this->barcode.'"
      alt=""
    />';
    
    // a link around the qrcode ?
    try {
      $isUrl = new sfValidatorUrl;
      $url = $isUrl->clean($this->barcode);
      $barcode = '<a href="'.$url.'">'.$img.'</a>';
    } catch ( sfValidatorError $e ) {
      $barcode = '<span>'.$img.'</span>';
    }
    
    $picture = '';
    if ( $this->product_declination_id
      && $this->Declination->product_id
      && $this->Declination->Product->picture_id
    )
    {
      $picture = $this->Declination->Product->Picture->getHtmlTagInline(array('alt' => ''));
    }
    
    // the HTML code
    return sprintf(<<<EOF
  <div class="cmd-element product">
  <table><tr>
    <td class="desc">
      <div class="event"><table><tbody><tr><td><span>%s:</span> <span>%s</span></td></tr></tbody></table></div>
      <p class="event-2nd"><span>%s:</span> <span>%s</span></p>
      <p class="image"><span>%s:</span> <span>%s</span></p>
      <div class="description">%s</div>
      <p class="price"><span>%s:</span> <span>%s</span> <span>%s</span></p>
      <p class="ids"><span class="transaction">#%s</span> <span class="id">#%s</span> <span class="code">%s</span></p>
      <div class="contact"><table><tbody><tr><td><div>%s</div></td></tr></tbody></table></div>
    </td>
    <td class="bc">%s</td>
  <tr></table>
  <img class="background" src="data:image/png;base64,%s" alt="" />
  </div>
EOF
      , __('Product', null, 'li_tickets_email'), (string)$this
      , __('Precision', null, 'li_tickets_email'), (string)$this->declination
      , __('Image', null, 'li_tickets_email'), $picture
      , $this->description_for_buyers ? $this->description_for_buyers : ''
      , __('Price', null, 'li_tickets_email'), $this->price_name, format_currency($this->value,'â‚¬')
      , $this->transaction_id, $this->id, $this->code
      , $this->Transaction->professional_id ? $this->Transaction->Professional->getFullName() : (string)$this->Transaction->Contact
      , $barcode
      , base64_encode(file_get_contents(sfConfig::get('sf_web_dir').'/images/product-simplified-layout-100dpi.png'))
    );
  }
}
