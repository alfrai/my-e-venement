<?php

/**
 * PluginProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginProduct extends BaseProduct
{
  public function preSave($event)
  {
    if ( !$this->vat_id )
    {
      if ( $this->product_category_id )
        $this->vat_id = $this->Category->vat_id;
      else
        $this->Vat = Doctrine::getTable('Vat')->createQuery('v')->orderBy('v.value DESC')->fetchOne();
    }
    
    parent::preSave($event);
  }
  public function getIndexesPrefix()
  {
    return strtolower(get_class($this));
  }
  public function actAs($tpl, array $options = array())
  {
    $options['table'] = $this->getTable();
    return parent::actAs($tpl, $options);
  }
  public function setUp()
  {
    parent::setUp();
    
    // versions
    // adding a "lang" column to EventVersion to be able to record the changes in the i18n data
    $this->getTable()->getTemplate('Versionable')->getAuditLog()
      ->hasColumn('lang', 'string', 2, array('fixed' => true, 'primary' => true));
    
    // searchable
    $tpl = $this->getTable()->getTemplate('Searchable');
    $tpl->getListener()->set('Searchable', new Doctrine_Search_Listener_I18n($tpl->getPlugin()));
  }
}
