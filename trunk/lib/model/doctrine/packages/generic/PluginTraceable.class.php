<?php

/**
 * PluginTraceable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginTraceable extends BaseTraceable
{
  // a major Doctrine hack to permit using indexes within inheritance
  public function index($name, array $definition = array()) 
  {
    $name = str_replace('%CLASS%', method_exists($this, 'getIndexesPrefix') ? $this->getIndexesPrefix() : $this->getTable()->getInstance()->getTableName(), $name);
    return parent::index($name, $definition);
  }
  
  public function actAs($tpl, array $options = array())
  {
    // hack to avoid inheritance from BaseTraceable and allow the special versionable behavior defined in self::setUp()
    if ( $tpl instanceof Doctrine_Template_Versionable && $tpl->getOption('listener') !== 'Doctrine_AuditLog_Listener_I18n'
      || in_array($tpl, array('Doctrine_Template_Versionable', 'Versionable')) && $options['listener'] !== 'Doctrine_AuditLog_Listener_I18n' )
      return $this;
    
    return parent::actAs($tpl, $options);
  }
  public function setUp()
  {
    parent::setUp();
    
    // I18N + Versionable
    $this->actAs('Versionable', array(
      'versionColumn' => 'version',
      'className' => '%CLASS%Version',
      'auditLog' => true,
      'listener' => 'Doctrine_AuditLog_Listener_I18n',
    ));
  }
}
