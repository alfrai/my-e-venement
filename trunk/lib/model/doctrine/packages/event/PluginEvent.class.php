<?php

/**
 * PluginEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginEvent extends BaseEvent implements liMetaEventSecurityAccessor
{
  public function preSave($event)
  {
    // converting duration from "1:00" to 3600 (seconds)
    if ( intval($this->duration).'' != ''.$this->duration )
    {
      $str = $this->duration;
      $this->duration = intval(strtotime($this->duration.'+0',0));
      
      // for durations > 24h
      if ( !$this->duration )
      {
        $arr = explode(':', $str);
        $this->duration = intval($arr[1])*60 + intval($arr[0])*3600;
      }
    }
    parent::preSave($event);
  }
  public function getDurationHR()
  {
    if ( intval($this->duration).'' != ''.$this->duration )
      return $this->duration;
    
    sfApplicationConfiguration::getActive()->loadHelpers(array('I18N'));
    $days = floor($this->duration/(3600*24));
    $hours = floor($this->duration%(3600*24))/3600;
    $minutes = str_pad(floor($this->duration%3600/60), 2, '0', STR_PAD_LEFT);
    return ($days > 0 ? __('%%d%% day(s)',array('%%d%%' => $days)) : '').' '.$hours.':'.$minutes;
  }
  
  public function getMEid()
  {
    return $this->meta_event_id;
  }

  public function getIndexesPrefix()
  {
    return strtolower(get_class($this));
  }
}
