Index: lib/vendor/symfony/lib/widget/sfWidgetFormSchemaFormatter.class.php
===================================================================
--- lib/vendor/symfony/lib/widget/sfWidgetFormSchemaFormatter.class.php	(révision 33616)
+++ lib/vendor/symfony/lib/widget/sfWidgetFormSchemaFormatter.class.php	(copie de travail)
@@ -88,6 +88,10 @@
       return self::$translationCallable->call($subject, $parameters, $catalogue);
     }
 
+    // LIBRINFO - 29/08/2011
+    if ( is_callable('__') )
+      $this->setTranslationCallable('__');
+    
     return call_user_func(self::$translationCallable, $subject, $parameters, $catalogue);
   }
 
Index: lib/vendor/symfony/lib/generator/sfModelGeneratorConfiguration.class.php
===================================================================
--- lib/vendor/symfony/lib/generator/sfModelGeneratorConfiguration.class.php	(révision 33616)
+++ lib/vendor/symfony/lib/generator/sfModelGeneratorConfiguration.class.php	(copie de travail)
@@ -309,20 +309,43 @@
     if ($this->getFilterDisplay())
     {
       $fields = array();
-      foreach ($this->getFilterDisplay() as $name)
+      
+      /**
+        * Libre Informatique - 2013-09-17
+        * Adding the idea of fieldsets in filters
+        * Still optional...
+        *
+        * Must be used with proper partials
+        * cf. http://svn.gna.org/viewcvs/e-venement/trunk/apps/templates/_filters*
+        *
+        **/
+      
+      foreach ($this->getFilterDisplay() as $setname => $fieldset)
       {
-        list($name, $flag) = sfModelGeneratorConfigurationField::splitFieldWithFlag($name);
-        if (!isset($this->configuration['filter']['fields'][$name]))
+        if ( !is_int($setname) )
+          $fields[$setname] = array();
+        else
+          $fieldset = array($fieldset);
+        
+        foreach ( $fieldset as $name )
         {
-          $this->configuration['filter']['fields'][$name] = new sfModelGeneratorConfigurationField($name, array_merge(
-            isset($config['default'][$name]) ? $config['default'][$name] : array(),
-            isset($config['filter'][$name]) ? $config['filter'][$name] : array(),
-            array('is_real' => false, 'type' => 'Text', 'flag' => $flag)
-          ));
+          list($name, $flag) = sfModelGeneratorConfigurationField::splitFieldWithFlag($name);
+          if (!isset($this->configuration['filter']['fields'][$name]))
+          {
+            $this->configuration['filter']['fields'][$name] = new sfModelGeneratorConfigurationField($name, array_merge(
+              isset($config['default'][$name]) ? $config['default'][$name] : array(),
+              isset($config['filter'][$name]) ? $config['filter'][$name] : array(),
+              array('is_real' => false, 'type' => 'Text', 'flag' => $flag)
+            ));
+          }
+          $field = $this->configuration['filter']['fields'][$name];
+          $field->setFlag($flag);
+          
+          if ( !is_int($setname) )
+            $fields[$setname][$name] = $field;
+          else
+            $fields[$name] = $field;
         }
-        $field = $this->configuration['filter']['fields'][$name];
-        $field->setFlag($flag);
-        $fields[$name] = $field;
       }
 
       return $fields;
