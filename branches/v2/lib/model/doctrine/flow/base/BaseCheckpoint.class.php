<?php

/**
 * BaseCheckpoint
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $event_id
 * @property integer $organism_id
 * @property string $name
 * @property string $description
 * @property boolean $legal
 * @property Event $Event
 * @property Organism $Organism
 * @property Doctrine_Collection $Checks
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCheckpoint extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('checkpoint');
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('organism_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('legal', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Organism', array(
             'local' => 'organism_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Check as Checks', array(
             'local' => 'id',
             'foreign' => 'checkpoint_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $geographical0 = new Doctrine_Template_Geographical(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($geographical0);
    }
}