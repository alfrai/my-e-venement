<?php

/**
 * Transaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Transaction extends PluginTransaction
{
  public function getNotPrinted()
  {
    $toprint = 0;
    foreach ( $this->Tickets as $ticket )
    if ( $ticket->Duplicatas->count() == 0 && !$ticket->printed && !$ticket->integrated && is_null($ticket->cancelling) )
      $toprint++;
    return $toprint;
  }
  public function getPrice($all = false, $all_inclusive = false)
  {
    if ( $all_inclusive )
    {
      return $this->getPrice($all)
        + $this->getMemberCardPrice($all)
        - $this->getTicketsLinkedToMemberCardPrice($all);
    }
    
    $price = 0;
    foreach ( $this->Tickets as $ticket )
    if ( $all || $ticket->Duplicatas->count() == 0 && ($ticket->printed || $ticket->integrated || !is_null($ticket->cancelling)) )
      $price += $ticket->value;
    return $price;
  }
  public function getMemberCardPrice($all = false)
  {
    $price = 0;
    foreach ( $this->MemberCards as $mc )
    if ( $all || $mc->activated )
      $price += $mc->MemberCardType->value;
    return $price;
  }
  public function getTicketsLinkedToMemberCardPrice($all = false)
  {
    $prices = array();
    
    // linked directly to this transaction
    foreach ( $this->MemberCards as $mc )
    if ( $all || $mc->activated )
    foreach ( $mc->MemberCardPrices as $mcp )
      if ( isset($prices[$mcp->price_id]) )
        $prices[$mcp->price_id]++;
      else
        $prices[$mcp->price_id] = 1;
    
    // linked to the transaction's contact
    if ( !is_null($this->contact_id) )
    foreach ( $this->Contact->MemberCards as $mc )
    if ( $mc->active && $mc->transaction_id != $this->id )
    foreach ( $mc->MemberCardPrices as $mcp )
      if ( isset($prices[$mcp->price_id]) )
        $prices[$mcp->price_id]++;
      else
        $prices[$mcp->price_id] = 1;
    
    $price = 0;
    foreach ( $this->Tickets as $ticket )
    if ( $ticket->printed && $ticket->member_card_id )
      $price += $ticket->value;
    elseif ( $all && $ticket->Price->member_card_linked && !$ticket->printed
          && isset($prices[$ticket->price_id]) && $prices[$ticket->price_id] > 0 )
    {
      $prices[$ticket->price_id]--;
      $price += $ticket->value;
    }
    return $price;
  }
  public function getPaid()
  {
    $paid = 0;
    foreach ( $this->Payments as $payment )
      $paid += $payment->value;
    return $paid;
  }
}
