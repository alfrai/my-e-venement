<?php

/**
 * ProductTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductTable extends PluginProductTable
{
  protected $user = NULL;
  
  public function createQuery($alias = 'p')
  {
    $q = parent::createQuery($alias)
      ->leftJoin("$alias.Translation pt")
      ->leftJoin("$alias.Declinations d")
      ->leftJoin('d.Translation dt')
    ;
    
    if ( !sfContext::hasInstance() )
      return $q;
    $this->user = sfContext::getInstance()->getUser();
    
    $q->andWhereIn("$alias.meta_event_id IS NULL OR $alias.meta_event_id", array_keys($this->user->getMetaEventsCredentials()));
    
    return $q;
  }
  
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Product');
  }
  
  public function retrievePublicList()
  {
    $q = $this->createQuery('p')
      ->leftJoin('p.Category c')
      ->leftJoin('c.Translation ct')
      ->andWhere('c.online = ?', true)
      ->leftJoin('p.Prices price')
      ->andWhere('price.online = ?', true)
      ->leftJoin('price.Users u')
    ;
    if ( sfContext::hasInstance() )
      $q->andWhere('u.id = ?', sfContext::getInstance()->getUser()->getId());
    return $q;
  }
}
