<?php
/**********************************************************************************
*
*	    This file is part of e-venement.
*
*    e-venement is free software; you can redistribute it and/or modify
*    it under the terms of the GNU General Public License as published by
*    the Free Software Foundation; either version 2 of the License.
*
*    e-venement is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*    GNU General Public License for more details.
*
*    You should have received a copy of the GNU General Public License
*    along with e-venement; if not, write to the Free Software
*    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*
*    Copyright (c) 2006-2012 Baptiste SIMON <baptiste.simon AT e-glop.net>
*    Copyright (c) 2006-2012 Libre Informatique [http://www.libre-informatique.fr/]
*
***********************************************************************************/
?>
<?php

/**
 * Ticket
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    e-venement
 * @subpackage model
 * @author     Baptiste SIMON <baptiste.simon AT e-glop.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Ticket extends PluginTicket
{
  public function hasBeenCancelled($direction = 'both')
  {
    if ( $this->Cancelling->count() > 0 )
      return true;
    
    if ( in_array($direction,array('both','down')) )
    foreach ( $this->Duplicatas as $dup )
    if ( $dup->hasBeenCancelled('down') )
      return true;
    
    if ( in_array($direction,array('both','up')) )
    if ( !is_null($this->duplicating) )
    if ( $this->Duplicated->hasBeenCancelled('up') )
      return true;
    
    return false;
  }
  
  public function getOriginal()
  {
    if ( is_null($this->duplicating) )
      return $this;
    
    return $this->Duplicated->getOriginal();
  }
  
  public function getBarcode($salt = '')
  {
    return md5('#'.$this->id.'-'.$salt);
  }
  
  public function getIdBarcoded()
  {
    $c = ''.$this->id;
    $n = strlen($c);
    for ( $i = 12-$n ; $i > 0 ; $i-- )
      $c = '0'.$c;
    return $c;
  }
  
  public function __toString()
  {
    return '#'.$this->id;
  }
}
