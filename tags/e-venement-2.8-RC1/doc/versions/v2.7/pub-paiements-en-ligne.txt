== objectif ==

rendre générique l'ajout de nouveaux modes de paiement en ligne.
appliquer ce changement aux paiements en ligne existant


== réalisation ==

=== utilisation de l'interface OnlinePaymentInterface ===

ajout d'une nouvelle interface relativement bien documentée "OnlinePaymentInterface" qu'il est nécessaire d'utiliser (= de suivre) pour ajouter un mode de paiement en ligne.

interface OnlinePaymentInterface
{
  /**
    * public "constructor"
    *
    * @param Transaction $transaction     the current transaction
    * @return OnlinePaymentInterface      object, ready to use
    **/
  public static function create(Transaction $transaction);
  
  /**
    * Find back the transaction id before the object is created, based on the bank response
    *
    * @param sfWebRequest $parameters     the request object made out of the bank response
    * @return integer                     the Transaction->id
    **/
  public static function getTransactionIdByResponse(sfWebRequest $parameters);
  
  /**
    * Deal with the bank response, records a BankPayment, and returns if the payment is validated or not
    *
    * @param sfWebRequest $parameters     the request object made out of the bank response
    * @return array                       array('success' => false, 'amount' => $bank->amount/100) at least
    **/
  public function response(sfWebRequest $parameters);
  
  /**
    * Renders the bank request, it can be a <form> or a <a> HTML object
    *   if you want your anchor to be directly followed, add it a "autofollow" class
    *   if you want your form to be directly submitted, add it a "autosubmit" class
    *
    * @param array                        $attributes to add to the main HTML object generated
    * @return string                      an HTML string to display as a bank request
    **/
  public function render(array $attributes = array());
  
  /**
    * Creates a BankPayment corresponding to the bank response, does not save it in the DB
    *
    * @param sfWebRequest $parameters     the request object made out of the bank response
    * @return BankPayment                 the BankPayment freshly created
    **/
  public function createBankPayment(sfWebRequest $request);
  
  /**
    * Gives a string representation of the payment request
    *   It is a standard way to call render() without a headache
    *
    * @return string                      an HTML string to display as a bank request
    **/
  public function __toString();
}


=== utilisation de plugins ===

donc si l'on écrit une librairie qui implémente cette interface correctement, l'idéal est de le faire dans un plugin (ex: liOnlinePaymentPayplugPlugin) et d'activer ce dernier dans la configuration générale (via config/extra-modules.php de préférence).


== paramétrage depuis l'ancien modèle ==

ATTENTION, ce changement demande l'activation de plugins au moment de la mise à jour, au risque de rendre les paiements en ligne inopérands... la procédure est donc :
- vérifier quel mode de paiement est utilisé dans apps/pub/config/app.yml
- ajouter le plugin lié dans le fichier config/extra-modules.php

et c'est tout, mais c'est nécessaire.

